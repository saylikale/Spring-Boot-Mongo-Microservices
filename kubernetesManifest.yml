# Spring-Boot Application Deployment

apiVersion: apps/v1
kind: Deployment
metadata:
  name: springapp_deploy
spec:
  replicas: 2
  selector:
    matchLabels:
      app: springapp
  template:
    metadata:
      name: springapp_pod
      labels:
        app: springapp
    spec:
      containers:
      - name: springapp_container
        image: saylikale40/spring-boot-mongo
        env:
        - name: MONGO_DB_HOSTNAME
          value: mongo
        - name: MONGO_DB_USERNAME
          value: devdb
        - name: MONGO_DB_PASSWORD
          value: devdb@123
        ports:
        - containerPort: 8080
---

# MongoDB Replication Controller

apiVersion: apps/v1
kind: ReplicaController
metadata:
  name: mongo_deploy
spec:
  replicas: 1
  selector:
    app: mongo
  template:
    metadata:
      name: mongo_pod
      labels:
        app: mongo
    spec:
      containers:
      - name: mongo_container
        image: mongo
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          value: devdb
        - name: MONGO_INITDB_ROOT_PASSWORD
          value: devdb@123
        ports:
        - containerPort: 27017
---

# Spring-Boot Application Service (Spring Boot App Default port -> 8080)

apiVersion: v1
kind: Service
metadata:
  name: springapp_svc
spec:
  type: NodePort
  selector:
    app: springapp
  ports:
  - port: 80
    targetPort: 8080
    NodePort: 30001
---

# MongoDB Service (MongoDB Default Port -> 27017)

apiVersion: v1
kind: Service
metadata:
  name: mongo_svc
spec:
  type: ClusterIP
  selector:
    app: mongo
  ports:
  - port: 27017
    targetPort: 27017
